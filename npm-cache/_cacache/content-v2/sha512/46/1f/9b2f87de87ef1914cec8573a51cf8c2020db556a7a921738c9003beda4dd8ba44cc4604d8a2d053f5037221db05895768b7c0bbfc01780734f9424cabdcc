{
  "_id" : "@expo/spawn-async",
  "_rev" : "48-6be9584bf1baa4273e4895e05f711fdd",
  "name" : "@expo/spawn-async",
  "description" : "A Promise-based interface into processes created by child_process.spawn",
  "dist-tags" : {
    "next" : "1.4.0",
    "latest" : "1.5.0"
  },
  "versions" : {
    "1.3.0" : {
      "name" : "@expo/spawn-async",
      "description" : "A Promise-based interface into processes created by child_process.spawn",
      "version" : "1.3.0",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/expo/spawn-async.git"
      },
      "engines" : {
        "node" : ">=4"
      },
      "main" : "build/spawnAsync.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@expo/spawn-async/-/spawn-async-1.3.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40expo%2Fspawn-async%2F-%2Fspawn-async-1.3.0.tgz",
        "shasum" : "01b8a4f6bba10b792663f9272df66c7e90166dad"
      },
      "dependencies" : {
        "cross-spawn" : "^5.1.0"
      },
      "devDependencies" : {
        "babel-cli" : "^6.16.0",
        "babel-jest" : "^20.0.3",
        "babel-preset-es2015-node4" : "^2.1.0",
        "babel-preset-es2017" : "^6.16.0",
        "jest" : "^20.0.4"
      },
      "license" : "MIT",
      "files" : [ "build" ],
      "directories" : {
      },
      "scripts" : {
        "build" : "babel -d build --ignore /__tests__/ src",
        "test" : "jest src"
      },
      "_from" : ".",
      "_npmVersion" : "4.1.2",
      "_npmUser" : {
        "name" : "ide",
        "email" : "ide+npm@jameside.com"
      },
      "_id" : "@expo/spawn-async@1.3.0",
      "gitHead" : "d7ac369cdf21b9981603f7ba6edbeff42f5d3ad6",
      "babel" : {
        "presets" : [ "es2015-node4", "es2017" ]
      },
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/spawn-async-1.3.0.tgz_1501200955527_0.7380977456923574"
      },
      "_shasum" : "01b8a4f6bba10b792663f9272df66c7e90166dad",
      "_nodeVersion" : "7.7.1"
    },
    "1.4.0" : {
      "name" : "@expo/spawn-async",
      "description" : "A Promise-based interface into processes created by child_process.spawn",
      "version" : "1.4.0",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/expo/spawn-async.git"
      },
      "engines" : {
        "node" : ">=4"
      },
      "main" : "build/spawnAsync.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@expo/spawn-async/-/spawn-async-1.4.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40expo%2Fspawn-async%2F-%2Fspawn-async-1.4.0.tgz",
        "shasum" : "39f7777bdee22e1f48d03898c9ed2f150a7f4cbd"
      },
      "dependencies" : {
        "@types/cross-spawn" : "^6.0.0",
        "cross-spawn" : "^6.0.5"
      },
      "devDependencies" : {
        "@types/jest" : "^23.3.9",
        "jest" : "^23.6.0",
        "ts-jest" : "^23.10.4",
        "typescript" : "^3.1.6"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "build" : "tsc",
        "clean" : "rm -rf build",
        "prepare" : "yarn clean && yarn build",
        "test" : "jest"
      },
      "_npmVersion" : "6.1.0",
      "_npmUser" : {
        "name" : "ide",
        "email" : "ide+npm@jameside.com"
      },
      "_id" : "@expo/spawn-async@1.4.0",
      "gitHead" : "a312b1edb4beb75016cc42c1cea5cfd7c1fb2c93",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/spawn-async_1.4.0_1542773684174_0.14897261836015718"
      },
      "readme" : "# spawn-async [![CircleCI](https://circleci.com/gh/expo/spawn-async.svg?style=svg)](https://circleci.com/gh/expo/spawn-async) [![Build Status](https://travis-ci.org/expo/spawn-async.svg?branch=master)](https://travis-ci.org/expo/spawn-async)\n\nA cross-platform version of Node's `child_process.spawn` as an async function that returns a promise.\n\n## Usage:\n```js\nimport spawnAsync from '@expo/spawn-async';\n\n(async function () {\n    let resultPromise = spawnAsync('echo', ['hello', 'world']);\n    let spawnedChildProcess = resultPromise.child;\n    try {\n      let {\n        pid,\n        output: [stdout, stderr],\n        stdout,\n        stderr,\n        status,\n        signal,\n      } = await resultPromise;\n    } catch (e) {\n       console.error(e.stack);\n      // The error object also has the same properties as the result object\n    }\n})();\n```\n\n## API\n\n`spawnAsync` takes the same arguments as [`child_process.spawn`](https://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options).\n\nIt returns a promise whose result is an object with these properties:\n\n- `pid`: the process ID of the spawned child process\n- `output`: an array with stdout and stderr's output\n- `stdout`: a string of what the child process wrote to stdout\n- `stderr`: a string of what the child process wrote to stderr\n- `status`: the exit code of the child process\n- `signal`: the signal (ex: `SIGTERM`) used to stop the child process if it did not exit on its own\n\nIf there's an error running the child process or it exits with a non-zero status code, `spawnAsync` rejects the returned promise. The Error object also has the properties listed above.\n\n### Accessing the child process\n\nSometimes you may want to access the child process object--for example, if you wanted to attach event handlers to `stdio` or `stderr` and process data as it is available instead of waiting for the process to be resolved.\n\nYou can do this by accessing `.child` on the Promise that is returned by `spawnAsync`.\n\nHere is an example:\n```js\n(async () => {\n    let ffmpeg$ = spawnAsync('ffmpeg', ['-i', 'path/to/source.flac', '-codec:a', 'libmp3lame', '-b:a', '320k', '-ar', '44100', 'path/to/output.mp3']);\n    let childProcess = ffmpeg$.child;\n    childProcess.stdout.on('data', (data) => {\n      console.log(`ffmpeg stdout: ${data}`);\n    });\n    childProcess.stderr.on('data', (data) => {\n      console.error(`ffmpeg stderr: ${data}`);\n    });\n    let result = await ffmpeg$;\n    console.log(`ffmpeg pid ${result.pid} exited with code ${result.code}`);\n})();\n\n```\n",
      "readmeFilename" : "README.md",
      "jest" : {
        "preset" : "ts-jest",
        "testEnvironment" : "node",
        "rootDir" : "src"
      },
      "_nodeVersion" : "8.12.0"
    },
    "1.5.0" : {
      "name" : "@expo/spawn-async",
      "description" : "A Promise-based interface into processes created by child_process.spawn",
      "version" : "1.5.0",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/expo/spawn-async.git"
      },
      "engines" : {
        "node" : ">=4"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@expo/spawn-async/-/spawn-async-1.5.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40expo%2Fspawn-async%2F-%2Fspawn-async-1.5.0.tgz",
        "shasum" : "799827edd8c10ef07eb1a2ff9dcfe081d596a395"
      },
      "dependencies" : {
        "cross-spawn" : "^6.0.5"
      },
      "devDependencies" : {
        "@types/cross-spawn" : "^6.0.0",
        "@types/jest" : "^23.3.9",
        "jest" : "^23.6.0",
        "ts-jest" : "^23.10.4",
        "typescript" : "^3.1.6"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "build" : "tsc",
        "clean" : "rm -rf build",
        "prepare" : "yarn clean && yarn build",
        "test" : "jest"
      },
      "_npmVersion" : "6.4.1",
      "_npmUser" : {
        "name" : "fson",
        "email" : "ville.immonen@iki.fi"
      },
      "_id" : "@expo/spawn-async@1.5.0",
      "gitHead" : "0afcfca2ea0908f9818e8fdd1c696af4fa14893d",
      "types" : "./build/spawnAsync.d.ts",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/spawn-async_1.5.0_1559219232942_0.8375005630291934"
      },
      "jest" : {
        "preset" : "ts-jest",
        "testEnvironment" : "node",
        "rootDir" : "src"
      },
      "_nodeVersion" : "10.15.3"
    },
    "1.4.2" : {
      "name" : "@expo/spawn-async",
      "description" : "A Promise-based interface into processes created by child_process.spawn",
      "version" : "1.4.2",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/expo/spawn-async.git"
      },
      "engines" : {
        "node" : ">=4"
      },
      "main" : "build/spawnAsync.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@expo/spawn-async/-/spawn-async-1.4.2.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40expo%2Fspawn-async%2F-%2Fspawn-async-1.4.2.tgz",
        "shasum" : "334b28215e3850071cede3a23d898f977904e01a"
      },
      "dependencies" : {
        "cross-spawn" : "^6.0.5"
      },
      "devDependencies" : {
        "@types/cross-spawn" : "^6.0.0",
        "@types/jest" : "^23.3.9",
        "jest" : "^23.6.0",
        "ts-jest" : "^23.10.4",
        "typescript" : "^3.1.6"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "build" : "tsc",
        "clean" : "rm -rf build",
        "prepare" : "yarn clean && yarn build",
        "test" : "jest"
      },
      "_npmVersion" : "6.1.0",
      "_npmUser" : {
        "name" : "dsokal",
        "email" : "dominiksokal@gmail.com"
      },
      "_id" : "@expo/spawn-async@1.4.2",
      "gitHead" : "5280b276aa427cfe3bb12e446a0be9db14ab3196",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/spawn-async_1.4.2_1555662043975_0.831681126552652"
      },
      "jest" : {
        "preset" : "ts-jest",
        "testEnvironment" : "node",
        "rootDir" : "src"
      },
      "_nodeVersion" : "8.15.1"
    },
    "1.2.8" : {
      "name" : "@expo/spawn-async",
      "description" : "A Promise-based interface into processes created by child_process.spawn",
      "version" : "1.2.8",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/expo/spawn-async.git"
      },
      "engines" : {
        "node" : ">=4"
      },
      "main" : "build/spawnAsync.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@expo/spawn-async/-/spawn-async-1.2.8.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40expo%2Fspawn-async%2F-%2Fspawn-async-1.2.8.tgz",
        "shasum" : "ca0f3e0b447dcfe2db3d29a2f58682465d60c63d"
      },
      "dependencies" : {
        "cross-spawn" : "^4.0.2"
      },
      "devDependencies" : {
        "babel-cli" : "^6.16.0",
        "babel-jest" : "^15.0.0",
        "babel-preset-es2015-node4" : "^2.1.0",
        "babel-preset-es2017" : "^6.16.0",
        "jest" : "^15.1.1"
      },
      "license" : "MIT",
      "files" : [ "build" ],
      "directories" : {
      },
      "scripts" : {
        "build" : "babel -d build --ignore /__tests__/ src",
        "test" : "jest src"
      },
      "_from" : ".",
      "_npmVersion" : "4.1.2",
      "_npmUser" : {
        "name" : "expoadmin",
        "email" : "exponent.team@gmail.com"
      },
      "_id" : "@expo/spawn-async@1.2.8",
      "gitHead" : "fcaae73c74220b93f4e7cad14dda89c70f1f5828",
      "babel" : {
        "presets" : [ "es2015-node4", "es2017" ]
      },
      "_npmOperationalInternal" : {
        "host" : "packages-12-west.internal.npmjs.com",
        "tmp" : "tmp/spawn-async-1.2.8.tgz_1493350279436_0.8688941416330636"
      },
      "_shasum" : "ca0f3e0b447dcfe2db3d29a2f58682465d60c63d",
      "_nodeVersion" : "7.7.1"
    }
  },
  "readme" : "# spawn-async [![CircleCI](https://circleci.com/gh/expo/spawn-async.svg?style=svg)](https://circleci.com/gh/expo/spawn-async) [![Build Status](https://travis-ci.org/expo/spawn-async.svg?branch=master)](https://travis-ci.org/expo/spawn-async)\n\nA cross-platform version of Node's `child_process.spawn` as an async function that returns a promise. Supports Node 8 LTS and up.\n\n## Usage:\n```js\nimport spawnAsync from '@expo/spawn-async';\n\n(async function () {\n    let resultPromise = spawnAsync('echo', ['hello', 'world']);\n    let spawnedChildProcess = resultPromise.child;\n    try {\n      let {\n        pid,\n        output: [stdout, stderr],\n        stdout,\n        stderr,\n        status,\n        signal,\n      } = await resultPromise;\n    } catch (e) {\n       console.error(e.stack);\n      // The error object also has the same properties as the result object\n    }\n})();\n```\n\n## API\n\n`spawnAsync` takes the same arguments as [`child_process.spawn`](https://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options). Its options are the same as those of `child_process.spawn` plus:\n\n- `ignoreStdio`: whether to ignore waiting for the child process's stdio streams to close before resolving the result promise. When ignoring stdio, the returned values for `stdout` and `stderr` will be empty strings. The default value of this option is `false`.\n\nIt returns a promise whose result is an object with these properties:\n\n- `pid`: the process ID of the spawned child process\n- `output`: an array with stdout and stderr's output\n- `stdout`: a string of what the child process wrote to stdout\n- `stderr`: a string of what the child process wrote to stderr\n- `status`: the exit code of the child process\n- `signal`: the signal (ex: `SIGTERM`) used to stop the child process if it did not exit on its own\n\nIf there's an error running the child process or it exits with a non-zero status code, `spawnAsync` rejects the returned promise. The Error object also has the properties listed above.\n\n### Accessing the child process\n\nSometimes you may want to access the child process object--for example, if you wanted to attach event handlers to `stdio` or `stderr` and process data as it is available instead of waiting for the process to be resolved.\n\nYou can do this by accessing `.child` on the Promise that is returned by `spawnAsync`.\n\nHere is an example:\n```js\n(async () => {\n    let ffmpeg$ = spawnAsync('ffmpeg', ['-i', 'path/to/source.flac', '-codec:a', 'libmp3lame', '-b:a', '320k', '-ar', '44100', 'path/to/output.mp3']);\n    let childProcess = ffmpeg$.child;\n    childProcess.stdout.on('data', (data) => {\n      console.log(`ffmpeg stdout: ${data}`);\n    });\n    childProcess.stderr.on('data', (data) => {\n      console.error(`ffmpeg stderr: ${data}`);\n    });\n    let result = await ffmpeg$;\n    console.log(`ffmpeg pid ${result.pid} exited with code ${result.code}`);\n})();\n\n```\n",
  "time" : {
    "1.3.0" : "2017-07-28T00:15:55.780Z",
    "1.4.0" : "2018-11-21T04:14:44.309Z",
    "1.5.0" : "2019-05-30T12:27:13.069Z",
    "1.4.2" : "2019-04-19T08:20:44.255Z",
    "created" : "2017-04-28T03:31:19.677Z",
    "1.2.8" : "2017-04-28T03:31:19.677Z",
    "modified" : "2020-06-01T18:02:08.240Z"
  },
  "repository" : {
    "type" : "git",
    "url" : "git+https://github.com/expo/spawn-async.git"
  },
  "users" : {
  },
  "readmeFilename" : "README.md",
  "license" : "MIT"
}
{
  "_id" : "@jimp/plugin-crop",
  "_rev" : "112-6823a8482aeb4823833f6184666a69bb",
  "name" : "@jimp/plugin-crop",
  "description" : "crop an image.",
  "dist-tags" : {
    "canary" : "0.16.2-canary.938.1059.0",
    "latest" : "0.16.1"
  },
  "versions" : {
    "0.6.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.6.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.6.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.6.0.tgz",
        "shasum" : "ef093b94327d3a2f642223a078861a96614367f5"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.6.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.6.0",
        "@jimp/test-utils" : "^0.6.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "5.6.0",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.6.0",
      "gitHead" : "ff78c045c32a9fff55f7fd92f72fa57409126485",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.6.0_1543433032656_0.8945840549730999"
      },
      "_nodeVersion" : "8.11.0"
    },
    "0.6.1" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.6.1",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.6.1.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.6.1.tgz",
        "shasum" : "69c85db28fb7a168eca14c43ae7d5225ce0bddb1"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.6.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.6.0",
        "@jimp/test-utils" : "^0.6.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "5.6.0",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.6.1",
      "gitHead" : "495fa8852fde16bada8bbdf6433ab2f197a4d35e",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.6.1_1553803077884_0.27273161806263846"
      },
      "_nodeVersion" : "8.11.0"
    },
    "0.6.4" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.6.4",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.6.4.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.6.4.tgz",
        "shasum" : "3447611790703cd7d51a0127b2cf77906711f9ec"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.6.4",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.6.4",
        "@jimp/test-utils" : "^0.6.4"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.11.0+x64 (darwin)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.6.4",
      "gitHead" : "7c9d3c817cade88d4a20422be10670d3c1528429",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.6.4_1556397731171_0.6250122530193785"
      },
      "_nodeVersion" : "8.11.0"
    },
    "0.6.5" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.6.5",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.6.5.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.6.5.tgz",
        "shasum" : "98f1d0b54dff6d398e2b16d85708858084fc26e2"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.6.5",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.6.5",
        "@jimp/test-utils" : "^0.6.5"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.6.5",
      "gitHead" : "b240287a362fdbc2baaea2a18d82c21b0777fd8c",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.6.5_1567472975112_0.34443583207168893"
      },
      "_nodeVersion" : "8.14.1"
    },
    "0.6.2" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.6.2",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.6.2.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.6.2.tgz",
        "shasum" : "1a0d252af1965b920e287721a6b78b264094ae18"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.6.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.6.2",
        "@jimp/test-utils" : "^0.6.2"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.11.0+x64 (darwin)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.6.2",
      "gitHead" : "6d52efed23e47bb6f7c27bb2ae9e119d05db4dd3",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.6.2_1556388038908_0.2404297587211035"
      },
      "_nodeVersion" : "8.11.0"
    },
    "0.8.1-canary.786.211.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.1-canary.786.211.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.1-canary.786.211.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.1-canary.786.211.0.tgz",
        "shasum" : "61e30085861df2f929470704670c0aea81b0dd36"
      },
      "dependencies" : {
        "@jimp/utils" : "0.8.1-canary.786.211.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.1-canary.786.211.0",
        "@jimp/test-utils" : "0.8.1-canary.786.211.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.1-canary.786.211.0",
      "gitHead" : "14314180ede2041c8ae050d013baf39f0c8afbd1",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.1-canary.786.211.0_1568081615768_0.21356572980131028"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.8.2-canary.792.332.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.2-canary.792.332.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.2-canary.792.332.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.2-canary.792.332.0.tgz",
        "shasum" : "bea31a5ab6e57fc5993787a7f226c01e241f2525"
      },
      "dependencies" : {
        "@jimp/utils" : "0.8.2-canary.792.332.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.2-canary.792.332.0",
        "@jimp/test-utils" : "0.8.2-canary.792.332.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.2-canary.792.332.0",
      "gitHead" : "3c22c39d67bb001aae84b2165e4f1f23b3cf84f2",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.2-canary.792.332.0_1568745313394_0.003027725000698256"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.10.2-canary.875.842.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.10.2-canary.875.842.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.10.2-canary.875.842.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.10.2-canary.875.842.0.tgz",
        "shasum" : "89c71b1bd7c6674173178d2b6b09adc5fca79b78"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.10.2-canary.875.842.0",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.10.2-canary.875.842.0",
        "@jimp/test-utils" : "0.10.2-canary.875.842.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.20.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.10.2-canary.875.842.0",
      "gitHead" : "0b0c586b4f487faa0c58261dcb032e983489169c",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.10.2-canary.875.842.0_1586870695582_0.02254232493572994"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "10.20.0"
    },
    "0.9.6-canary.857.681.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.9.6-canary.857.681.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.9.6-canary.857.681.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.9.6-canary.857.681.0.tgz",
        "shasum" : "c435f263a6b7105863230fe3f9ed49cc340eeca8"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.9.6-canary.857.681.0",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.9.6-canary.857.681.0",
        "@jimp/test-utils" : "0.9.6-canary.857.681.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.9.6-canary.857.681.0",
      "gitHead" : "002d4f41ee10762e19853545cdfc08427f748303",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.9.6-canary.857.681.0_1584552772741_0.15340644609069032"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.10.5-canary.882.886.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.10.5-canary.882.886.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.10.5-canary.882.886.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.10.5-canary.882.886.0.tgz",
        "shasum" : "7ebd48bbf088192fef66ee74970bb8133982505d"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.10.5-canary.882.886.0"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.10.5-canary.882.886.0",
        "@jimp/test-utils" : "0.10.5-canary.882.886.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.20.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.10.5-canary.882.886.0",
      "gitHead" : "2d20976992dc3dcd2ced010be15a1da07604749c",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.10.5-canary.882.886.0_1588390716751_0.3171510319309234"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "10.20.1"
    },
    "0.8.5-canary.b147e81.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.5-canary.b147e81.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.5-canary.b147e81.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.5-canary.b147e81.0.tgz",
        "shasum" : "59829dedeb6ccbb494892cf2a86e439bae51c3ce"
      },
      "dependencies" : {
        "@jimp/utils" : "0.8.5-canary.b147e81.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.5-canary.b147e81.0",
        "@jimp/test-utils" : "0.8.5-canary.b147e81.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.15.0+x64 (darwin)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.5-canary.b147e81.0",
      "gitHead" : "b147e810972b2bba9bea4a132c3026ca119832e7",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.5-canary.b147e81.0_1569358117888_0.24121728305101842"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "10.15.0"
    },
    "0.8.1-canary.789.460.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.1-canary.789.460.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.1-canary.789.460.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.1-canary.789.460.0.tgz",
        "shasum" : "b12a9ec097c30e63fededb476e7e53a134fe91d4"
      },
      "dependencies" : {
        "@jimp/utils" : "0.8.1-canary.789.460.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.1-canary.789.460.0",
        "@jimp/test-utils" : "0.8.1-canary.789.460.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.1-canary.789.460.0",
      "gitHead" : "7eee535c2a838803b49844f90c4d118b8a5683b6",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.1-canary.789.460.0_1569490077640_0.6045394087127554"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.9.6-canary.858.667.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.9.6-canary.858.667.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.9.6-canary.858.667.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.9.6-canary.858.667.0.tgz",
        "shasum" : "2e0229c36a111edaa83b7985ccfcbcd16006185b"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.9.6-canary.858.667.0",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.9.6-canary.858.667.0",
        "@jimp/test-utils" : "0.9.6-canary.858.667.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.9.6-canary.858.667.0",
      "gitHead" : "840d8f4c4093fe094d5257c9d9d7c47fadd76034",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.9.6-canary.858.667.0_1584549409343_0.6925763802295319"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.12.1-canary.892.924.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.12.1-canary.892.924.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.12.1-canary.892.924.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.12.1-canary.892.924.0.tgz",
        "shasum" : "cd5105b671ca65a6bbb2ec58de159abe68a8447f"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.12.1-canary.892.924.0"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.12.1-canary.892.924.0",
        "@jimp/test-utils" : "0.12.1-canary.892.924.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.20.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.12.1-canary.892.924.0",
      "gitHead" : "6f877e86e4dc5817f4a8710a1dbf86a983aacc0f",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.12.1-canary.892.924.0_1589869197171_0.9480599702648147"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "10.20.1"
    },
    "0.10.4-canary.882.884.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.10.4-canary.882.884.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.10.4-canary.882.884.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.10.4-canary.882.884.0.tgz",
        "shasum" : "b2bb4f15b6ad25edfe011b53ffd93ad0c1156e2f"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.10.4-canary.882.884.0"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.10.4-canary.882.884.0",
        "@jimp/test-utils" : "0.10.4-canary.882.884.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.20.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.10.4-canary.882.884.0",
      "gitHead" : "5a9c3fb1790f93d37ef380a2127fef7aac313db5",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.10.4-canary.882.884.0_1588390590718_0.4748593083155932"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "10.20.1"
    },
    "0.16.1" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.16.1",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.16.1.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.16.1.tgz",
        "shasum" : "b362497c873043fe47ba881ab08604bf7226f50f"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "^0.16.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.16.1",
        "@jimp/test-utils" : "^0.16.1"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.22.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.16.1",
      "gitHead" : "909f06eac36ef5ba36ebb1e0853fd006c4da3560",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.16.1_1598635256246_0.18078544077603698"
      },
      "_nodeVersion" : "10.22.0"
    },
    "0.16.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.16.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.16.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.16.0.tgz",
        "shasum" : "901052a0984f9259d082caab0560044fe43bcccd"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "^0.16.0"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.16.0",
        "@jimp/test-utils" : "^0.16.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.22.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.16.0",
      "gitHead" : "6b013225f12739762bf946dc4a00f34bafaf61ec",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.16.0_1596846445777_0.5744857032624369"
      },
      "_nodeVersion" : "10.22.0"
    },
    "0.8.5-canary.753c2c9.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.5-canary.753c2c9.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.5-canary.753c2c9.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.5-canary.753c2c9.0.tgz",
        "shasum" : "cc50066daa2066118e3d433ca26796316432a8c4"
      },
      "dependencies" : {
        "@jimp/utils" : "0.8.5-canary.753c2c9.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.5-canary.753c2c9.0",
        "@jimp/test-utils" : "0.8.5-canary.753c2c9.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.15.0+x64 (darwin)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.5-canary.753c2c9.0",
      "gitHead" : "753c2c99505ea4cc87aeb1ac9def054b52a2e90c",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.5-canary.753c2c9.0_1569357917062_0.6347577649601404"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "10.15.0"
    },
    "0.12.1" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.12.1",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.12.1.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.12.1.tgz",
        "shasum" : "44a5adb5f5222c3d3c6c94410b1995fe88041ada"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "^0.12.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.12.1",
        "@jimp/test-utils" : "^0.12.1"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.20.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.12.1",
      "gitHead" : "942e635564e36fc243767531b4f8be036afa40b5",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.12.1_1589869830931_0.6724494300488941"
      },
      "_nodeVersion" : "10.20.1"
    },
    "0.12.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.12.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.12.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.12.0.tgz",
        "shasum" : "ada5b4663f9a953d45d4496b24911423f8a47202"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "^0.12.0"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.12.0",
        "@jimp/test-utils" : "^0.12.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.20.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.12.0",
      "gitHead" : "2b3413a12995f7f3fdfb9dfd19ba9268734c6400",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.12.0_1589675654563_0.7777573509831832"
      },
      "_nodeVersion" : "10.20.1"
    },
    "0.8.1-canary.789.301.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.1-canary.789.301.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.1-canary.789.301.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.1-canary.789.301.0.tgz",
        "shasum" : "63826b441ee973dcbe784efa3f0b19c50ecf801f"
      },
      "dependencies" : {
        "@jimp/utils" : "0.8.1-canary.789.301.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.1-canary.789.301.0",
        "@jimp/test-utils" : "0.8.1-canary.789.301.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.1-canary.789.301.0",
      "gitHead" : "b74e13e54badf24f2df94e7e1d1a6c960aab8ff6",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.1-canary.789.301.0_1568360360968_0.7596508450191555"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.9.4-canary.838.613.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.9.4-canary.838.613.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.9.4-canary.838.613.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.9.4-canary.838.613.0.tgz",
        "shasum" : "57af93afc715b53d5756f649eb3d1b3c0694838d"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.9.4-canary.838.613.0",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.9.4-canary.838.613.0",
        "@jimp/test-utils" : "0.9.4-canary.838.613.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.9.4-canary.838.613.0",
      "gitHead" : "c58a4dfea857b88949d0891906c31cda66345ded",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.9.4-canary.838.613.0_1578583941426_0.5155018506999389"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.8.2-canary.794.308.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.2-canary.794.308.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.2-canary.794.308.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.2-canary.794.308.0.tgz",
        "shasum" : "d430ddc50dc27a073b3ee4f62baaf852e3586734"
      },
      "dependencies" : {
        "@jimp/utils" : "0.8.2-canary.794.308.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.2-canary.794.308.0",
        "@jimp/test-utils" : "0.8.2-canary.794.308.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.2-canary.794.308.0",
      "gitHead" : "b934a6eb4448269ef21bbeba851f9417398d1f89",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.2-canary.794.308.0_1568394393080_0.5036351193115562"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.9.9-canary.867.792.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.9.9-canary.867.792.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.9.9-canary.867.792.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.9.9-canary.867.792.0.tgz",
        "shasum" : "22515ceb375d1108494ea69c02c50d04608b529d"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.9.9-canary.867.792.0",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.9.9-canary.867.792.0",
        "@jimp/test-utils" : "0.9.9-canary.867.792.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.19.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.9.9-canary.867.792.0",
      "gitHead" : "e05689ace8f60a7f4d031924f06d8ccdfa5bd05b",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.9.9-canary.867.792.0_1585521975091_0.8995040742149132"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "10.19.0"
    },
    "0.8.1-canary.791.276.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.1-canary.791.276.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.1-canary.791.276.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.1-canary.791.276.0.tgz",
        "shasum" : "47bb8a29a2a6a0957ed8bb04c9b0143556923c1d"
      },
      "dependencies" : {
        "@jimp/utils" : "0.8.1-canary.791.276.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.1-canary.791.276.0",
        "@jimp/test-utils" : "0.8.1-canary.791.276.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.1-canary.791.276.0",
      "gitHead" : "10c0813de0db0d8460b082ac9944d638a8c387fc",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.1-canary.791.276.0_1568282219984_0.4885382059780923"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.8.5-canary.1.b147e81.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.5-canary.1.b147e81.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.5-canary.1.b147e81.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.5-canary.1.b147e81.0.tgz",
        "shasum" : "3eb3020d7601d1cb58e7c8cef35bf7300720312c"
      },
      "dependencies" : {
        "@jimp/utils" : "0.8.5-canary.1.b147e81.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.5-canary.1.b147e81.0",
        "@jimp/test-utils" : "0.8.5-canary.1.b147e81.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v8.14.1+x64 (darwin)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.5-canary.1.b147e81.0",
      "gitHead" : "b147e810972b2bba9bea4a132c3026ca119832e7",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.5-canary.1.b147e81.0_1569358713938_0.30673055593218357"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.9.4-canary.832.606.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.9.4-canary.832.606.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.9.4-canary.832.606.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.9.4-canary.832.606.0.tgz",
        "shasum" : "864f223161b48c666a3e84197dd66ce49fb9256a"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.9.4-canary.832.606.0",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.9.4-canary.832.606.0",
        "@jimp/test-utils" : "0.9.4-canary.832.606.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.9.4-canary.832.606.0",
      "gitHead" : "b699e66246ac0d4eb6a75d13a4275a84ad3d7d85",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.9.4-canary.832.606.0_1577492774241_0.10883436701637561"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.16.2-canary.934.1053.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.16.2-canary.934.1053.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.16.2-canary.934.1053.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.16.2-canary.934.1053.0.tgz",
        "shasum" : "a65b41ac58dcb2159d268a202c43323bb519115b"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.16.2-canary.934.1053.0"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.16.2-canary.934.1053.0",
        "@jimp/test-utils" : "0.16.2-canary.934.1053.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.22.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.16.2-canary.934.1053.0",
      "gitHead" : "7af955a9ed6dd3a78894ba5f6b4c893dab517057",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.16.2-canary.934.1053.0_1598635454434_0.10181138535740031"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "10.22.0"
    },
    "0.6.5-canary.784.124.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.6.5-canary.784.124.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.6.5-canary.784.124.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.6.5-canary.784.124.0.tgz",
        "shasum" : "f4268e98a3aa68cfcdabb0fc609b04e34847c7f4"
      },
      "dependencies" : {
        "@jimp/utils" : "0.6.5-canary.784.124.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.6.5-canary.784.124.0",
        "@jimp/test-utils" : "0.6.5-canary.784.124.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.6.5-canary.784.124.0",
      "gitHead" : "2c1e4c04e7e0dc08526c9188009808f02bf886fd",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.6.5-canary.784.124.0_1567471883505_0.1943515180601767"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.3.9" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.3.9",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.3.9.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.3.9.tgz",
        "shasum" : "2b096a611adc4fa3d41ba41db127b012d59395ce"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.3.9",
        "core-js" : "^2.5.7"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "5.6.0",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.3.9",
      "gitHead" : "cc0669daf5b35d7bb0cb9d2a07a3ab4215bbed79",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.3.9_1535416083932_0.12195520866276799"
      },
      "_nodeVersion" : "9.10.0"
    },
    "0.11.1-canary.891.908.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.11.1-canary.891.908.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.11.1-canary.891.908.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.11.1-canary.891.908.0.tgz",
        "shasum" : "585b7c3424c8eb004ccaa4196f9f41d7b85a6fbf"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.11.1-canary.891.908.0"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.11.1-canary.891.908.0",
        "@jimp/test-utils" : "0.11.1-canary.891.908.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.20.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.11.1-canary.891.908.0",
      "gitHead" : "8fbf0a27694e699539d5281afa06770516a5cfd4",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.11.1-canary.891.908.0_1589653400364_0.5139633660614447"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "10.20.1"
    },
    "0.5.1" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.5.1",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.5.1.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.5.1.tgz",
        "shasum" : "52a16d847604698b6356c14fc45db4434a37bade"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.5.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.5.1",
        "@jimp/test-utils" : "^0.5.1"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_from" : "file:jimp-plugin-crop-0.5.1.tgz",
      "_npmVersion" : "6.2.0",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.5.1",
      "gitHead" : "b23ab92550336eed5d4ac422564c7c63ea280c73",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.5.1_1537734335911_0.8920898597204883"
      },
      "_resolved" : "",
      "_integrity" : "",
      "_nodeVersion" : "10.8.0"
    },
    "0.5.2" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.5.2",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.5.2.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.5.2.tgz",
        "shasum" : "3c14ffbd46fbb049227ca1d12b38bb19a3a847f4"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.5.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.5.2",
        "@jimp/test-utils" : "^0.5.2"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_from" : "file:jimp-plugin-crop-0.5.2.tgz",
      "_npmVersion" : "6.2.0",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.5.2",
      "gitHead" : "206fa4a372f89b6b3ea87d73656066a0baf055d6",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.5.2_1537736028921_0.782673739351671"
      },
      "_resolved" : "",
      "_integrity" : "",
      "_nodeVersion" : "10.8.0"
    },
    "0.5.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.5.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.5.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.5.0.tgz",
        "shasum" : "5d0129d320e1838721aaec09caf5b6fa22a674d7"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.5.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.5.0",
        "@jimp/test-utils" : "^0.5.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "5.6.0",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.5.0",
      "gitHead" : "fbbe0b7da5a9dcf8da35e2dfb2e8265ca850435c",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.5.0_1537043327106_0.8798406368856346"
      },
      "_nodeVersion" : "9.10.0"
    },
    "0.9.1" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.9.1",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.9.1.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.9.1.tgz",
        "shasum" : "67988586bc74e664b6380e3c200356150d2f3cba"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.9.1",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.9.1",
        "@jimp/test-utils" : "^0.9.1"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.9.1",
      "gitHead" : "c6f11425c0e8585a73109d61d3372612bfa3799f",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.9.1_1574790010745_0.1019529532729655"
      },
      "_nodeVersion" : "8.14.1"
    },
    "0.5.3" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.5.3",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.5.3.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.5.3.tgz",
        "shasum" : "30c5a06dc4ac3d4ecf0a38a44fe54d68f54a77c7"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.5.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.5.3",
        "@jimp/test-utils" : "^0.5.3"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_from" : "file:jimp-plugin-crop-0.5.3.tgz",
      "_npmVersion" : "6.2.0",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.5.3",
      "gitHead" : "762e7e5f8099996f7bfb580477e29a75694e564e",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.5.3_1537737250062_0.1996917900081574"
      },
      "_resolved" : "",
      "_integrity" : "",
      "_nodeVersion" : "10.8.0"
    },
    "0.5.4" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.5.4",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.5.4.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.5.4.tgz",
        "shasum" : "124cf52aa07e36c7a33f39e2e86e78166c300ca7"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.5.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.5.4",
        "@jimp/test-utils" : "^0.5.4"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_from" : "file:jimp-plugin-crop-0.5.4.tgz",
      "_npmVersion" : "6.4.1",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.5.4",
      "gitHead" : "833308a04a490b760425b9caadd6409cb345a582",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.5.4_1539325198999_0.18774422381542322"
      },
      "_resolved" : "",
      "_integrity" : "",
      "_nodeVersion" : "10.11.0"
    },
    "0.9.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.9.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.9.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.9.0.tgz",
        "shasum" : "03ef06819b93cf4bf7cce81514814b85424dc527"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.9.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.9.0",
        "@jimp/test-utils" : "^0.9.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.9.0",
      "gitHead" : "0591e7391f64a92084a4ce9c96a1274df6339c25",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.9.0_1574788056197_0.1805313618630744"
      },
      "_nodeVersion" : "8.14.1"
    },
    "0.6.7-canary.783.157.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.6.7-canary.783.157.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.6.7-canary.783.157.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.6.7-canary.783.157.0.tgz",
        "shasum" : "2886eebe63ca1fa64b8db0f13a496ad2340fd5e1"
      },
      "dependencies" : {
        "@jimp/utils" : "0.6.7-canary.783.157.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.6.7-canary.783.157.0",
        "@jimp/test-utils" : "0.6.7-canary.783.157.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.6.7-canary.783.157.0",
      "gitHead" : "a1f0b247580b7bc0c94b6964b9b277e0a2e99e9e",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.6.7-canary.783.157.0_1567474109750_0.9567164259654257"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.8.2-canary.792.339.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.2-canary.792.339.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.2-canary.792.339.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.2-canary.792.339.0.tgz",
        "shasum" : "ca61ada34184906730e3ca4aae83018a0877ef26"
      },
      "dependencies" : {
        "@jimp/utils" : "0.8.2-canary.792.339.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.2-canary.792.339.0",
        "@jimp/test-utils" : "0.8.2-canary.792.339.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.2-canary.792.339.0",
      "gitHead" : "1596cf9eb0dfce7fdbd1c7636e613bfb5bb5f1a3",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.2-canary.792.339.0_1568761320505_0.8346347083728591"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.9.9-canary.868.799.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.9.9-canary.868.799.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.9.9-canary.868.799.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.9.9-canary.868.799.0.tgz",
        "shasum" : "0ed6ef84c38b5675548c3dc273b2d5dec134d247"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.9.9-canary.868.799.0",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.9.9-canary.868.799.0",
        "@jimp/test-utils" : "0.9.9-canary.868.799.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.19.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.9.9-canary.868.799.0",
      "gitHead" : "43ad540880302d7c8793ec393698d0dc2bc32e87",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.9.9-canary.868.799.0_1585530985009_0.19357655902869242"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "10.19.0"
    },
    "0.6.5-canary.784.118.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.6.5-canary.784.118.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.6.5-canary.784.118.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.6.5-canary.784.118.0.tgz",
        "shasum" : "dcb2004c91f9b6784306c914dfef9e80fdcbdc41"
      },
      "dependencies" : {
        "@jimp/utils" : "0.6.5-canary.784.118.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.6.5-canary.784.118.0",
        "@jimp/test-utils" : "0.6.5-canary.784.118.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.6.5-canary.784.118.0",
      "gitHead" : "20a24e11c6ef9b5ff9ed731f9a2d356fb8142518",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.6.5-canary.784.118.0_1567471403364_0.9810116998930478"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.6.8-canary.783.163.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.6.8-canary.783.163.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.6.8-canary.783.163.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.6.8-canary.783.163.0.tgz",
        "shasum" : "2e182dcf2ad1ea79b92bf6a8b64233ffe5c77948"
      },
      "dependencies" : {
        "@jimp/utils" : "0.6.8-canary.783.163.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.6.8-canary.783.163.0",
        "@jimp/test-utils" : "0.6.8-canary.783.163.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.6.8-canary.783.163.0",
      "gitHead" : "7f6e1d7e6f2ccf5d862e7e97ca1b8235da2053d4",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.6.8-canary.783.163.0_1567486719269_0.38991903545619677"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.6.5-canary.4564f3c.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.6.5-canary.4564f3c.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.6.5-canary.4564f3c.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.6.5-canary.4564f3c.0.tgz",
        "shasum" : "d1f4c912005ab8b664616896a146f67f56d17525"
      },
      "dependencies" : {
        "@jimp/utils" : "0.6.5-canary.4564f3c.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.6.5-canary.4564f3c.0",
        "@jimp/test-utils" : "0.6.5-canary.4564f3c.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v10.15.0+x64 (darwin)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.6.5-canary.4564f3c.0",
      "gitHead" : "4564f3c577d6a6f44199f0818cfe6c0d24a9daac",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.6.5-canary.4564f3c.0_1567468781910_0.617126333040606"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "10.15.0"
    },
    "0.14.1-canary.911.993.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.14.1-canary.911.993.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.14.1-canary.911.993.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.14.1-canary.911.993.0.tgz",
        "shasum" : "3067bb7943238a779c048f14fb075a0e8ee35412"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.14.1-canary.911.993.0"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.14.1-canary.911.993.0",
        "@jimp/test-utils" : "0.14.1-canary.911.993.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.21.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.14.1-canary.911.993.0",
      "gitHead" : "911578e80f7abb355da61c429deba739fa411661",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.14.1-canary.911.993.0_1594924358842_0.902418967461021"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "10.21.0"
    },
    "0.10.4-canary.882.885.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.10.4-canary.882.885.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.10.4-canary.882.885.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.10.4-canary.882.885.0.tgz",
        "shasum" : "231f6485f89c7b527a3a155e88f6daac7b45365c"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.10.4-canary.882.885.0"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.10.4-canary.882.885.0",
        "@jimp/test-utils" : "0.10.4-canary.882.885.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.20.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.10.4-canary.882.885.0",
      "gitHead" : "9c962bd2c1ca4e07770dbb6469e18b3727927ac9",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.10.4-canary.882.885.0_1588390571271_0.17803293937908693"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "10.20.1"
    },
    "0.9.4-canary.841.620.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.9.4-canary.841.620.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.9.4-canary.841.620.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.9.4-canary.841.620.0.tgz",
        "shasum" : "9f33581e3dbb6cf6feb2cccbb01ab2cda7f5d12c"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.9.4-canary.841.620.0",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.9.4-canary.841.620.0",
        "@jimp/test-utils" : "0.9.4-canary.841.620.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.9.4-canary.841.620.0",
      "gitHead" : "04c9ce5c5abeac1f632c376ff19a798e8f52b0e4",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.9.4-canary.841.620.0_1579994891757_0.8332177457797776"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.7.1-canary.770.193.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.7.1-canary.770.193.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.7.1-canary.770.193.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.7.1-canary.770.193.0.tgz",
        "shasum" : "8de56d18e24ff3049660ffda9c71ee8eef2db274"
      },
      "dependencies" : {
        "@jimp/utils" : "0.7.1-canary.770.193.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.7.1-canary.770.193.0",
        "@jimp/test-utils" : "0.7.1-canary.770.193.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.7.1-canary.770.193.0",
      "gitHead" : "4eaccc589bda6d67853184da55c7e22c74c75676",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.7.1-canary.770.193.0_1567824530840_0.370419595026966"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.8.6-canary.810.481.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.6-canary.810.481.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.6-canary.810.481.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.6-canary.810.481.0.tgz",
        "shasum" : "8ab02313616c7e2ba990fbcc81ba3c782c7a76d8"
      },
      "dependencies" : {
        "@jimp/utils" : "0.8.6-canary.810.481.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.6-canary.810.481.0",
        "@jimp/test-utils" : "0.8.6-canary.810.481.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.6-canary.810.481.0",
      "gitHead" : "941ed08d9215f928708b7ab6a9a942a2fc5995df",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.6-canary.810.481.0_1572455747240_0.01600384672953581"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.15.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.15.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.15.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.15.0.tgz",
        "shasum" : "da58d3021eb4c53c420f73431197950f4bc8d07a"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "^0.15.0"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.15.0",
        "@jimp/test-utils" : "^0.15.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.22.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.15.0",
      "gitHead" : "5e34fdf5f7b63d4fa00ec8f79c3e645730ccd987",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.15.0_1596831907106_0.09615018615687898"
      },
      "_nodeVersion" : "10.22.0"
    },
    "0.11.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.11.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.11.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.11.0.tgz",
        "shasum" : "cac6030cc938e9e9f336b4d661778dfd699bad87"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "^0.11.0"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.11.0",
        "@jimp/test-utils" : "^0.11.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.20.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.11.0",
      "gitHead" : "ec736c9fb6aaf2b325db76819af4c3caea1f9ec8",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.11.0_1589577683017_0.6786460528022262"
      },
      "_nodeVersion" : "10.20.1"
    },
    "0.8.6-canary.815.502.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.6-canary.815.502.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.6-canary.815.502.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.6-canary.815.502.0.tgz",
        "shasum" : "c17fde9815198298ed6cdce2fbbab6c0a60ced19"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.8.6-canary.815.502.0",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.6-canary.815.502.0",
        "@jimp/test-utils" : "0.8.6-canary.815.502.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.6-canary.815.502.0",
      "gitHead" : "5a68a9702462d87d579c9a54c5170d4940a2991d",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.6-canary.815.502.0_1574201629996_0.6827762771462005"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.8.5-canary.800.426.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.5-canary.800.426.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.5-canary.800.426.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.5-canary.800.426.0.tgz",
        "shasum" : "285cc7d3189a3fc66c4f110b98a830f3de8c117f"
      },
      "dependencies" : {
        "@jimp/utils" : "0.8.5-canary.800.426.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.5-canary.800.426.0",
        "@jimp/test-utils" : "0.8.5-canary.800.426.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.5-canary.800.426.0",
      "gitHead" : "eea6165d7a8ee65bce94db45d530aa45bba72af1",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.5-canary.800.426.0_1569027212128_0.6886476983577468"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.3.6-alpha.6" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.3.6-alpha.6",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.3.6-alpha.6.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.3.6-alpha.6.tgz",
        "shasum" : "f06864fba4bc7a0fdcd371b6cac9b8f0ded2d2a1"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.3.6-alpha.6"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.3.6-alpha.6",
      "gitHead" : "c432eb631a023bf80d5457ef4673cb308d14ce59",
      "licenseText" : "The MIT License (MIT)\n\nCopyright (c) 2014 Oliver Moran\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.3.6-alpha.6_1535258344166_0.8972835982071534"
      }
    },
    "0.9.2-canary.815.538.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.9.2-canary.815.538.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.9.2-canary.815.538.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.9.2-canary.815.538.0.tgz",
        "shasum" : "70c2af84e85c7c8d241504c9ff285502a7e7453d"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.9.2-canary.815.538.0",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.9.2-canary.815.538.0",
        "@jimp/test-utils" : "0.9.2-canary.815.538.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.9.2-canary.815.538.0",
      "gitHead" : "7d4c8b69bc33d98b760ad1e0acbe678ed03647f1",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.9.2-canary.815.538.0_1574799222796_0.448760738790164"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.14.1-canary.919.1005.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.14.1-canary.919.1005.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.14.1-canary.919.1005.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.14.1-canary.919.1005.0.tgz",
        "shasum" : "98ac5f33caa75c05c7742f28e860f01b392b1e8c"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.14.1-canary.919.1005.0"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.14.1-canary.919.1005.0",
        "@jimp/test-utils" : "0.14.1-canary.919.1005.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.22.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.14.1-canary.919.1005.0",
      "gitHead" : "4e997ab650cef149810cbd3df60cee4507f588e8",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.14.1-canary.919.1005.0_1596109893709_0.3141210397055838"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "10.22.0"
    },
    "0.3.6-alpha.5" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.3.6-alpha.5",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.3.6-alpha.5.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.3.6-alpha.5.tgz",
        "shasum" : "ab34159e4f4b51da5ecd5e3705fbea9294428cf1"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.3.6-alpha.5"
      },
      "peerDependencies" : {
        "@jimp/custom" : "0.3.6-alpha.4"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.3.6-alpha.5",
      "licenseText" : "The MIT License (MIT)\n\nCopyright (c) 2014 Oliver Moran\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.3.6-alpha.5_1535257361857_0.3259738045702232"
      }
    },
    "0.13.0-canary.899.964.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.13.0-canary.899.964.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.13.0-canary.899.964.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.13.0-canary.899.964.0.tgz",
        "shasum" : "864ae09cdd88f23652680cb10b76a00b3fbfa270"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.13.0-canary.899.964.0"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.13.0-canary.899.964.0",
        "@jimp/test-utils" : "0.13.0-canary.899.964.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.21.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.13.0-canary.899.964.0",
      "gitHead" : "238e21aefe491f4bb32cea2671c35d6d3e2756c9",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.13.0-canary.899.964.0_1591337059083_0.41343107388285505"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "10.21.0"
    },
    "0.8.6-canary.815.488.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.6-canary.815.488.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.6-canary.815.488.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.6-canary.815.488.0.tgz",
        "shasum" : "ccf7c8cad08e03473cb266342bc0852ce308e55f"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.8.6-canary.815.488.0",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.6-canary.815.488.0",
        "@jimp/test-utils" : "0.8.6-canary.815.488.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.6-canary.815.488.0",
      "gitHead" : "3260b0cc7bddc7360f70248e28fdd815b7d17c8c",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.6-canary.815.488.0_1573939556899_0.8633659928851187"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.6.8" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.6.8",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.6.8.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.6.8.tgz",
        "shasum" : "ffec8951a2f3eccad1e3cff9afff5326bd980ce7"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.6.8",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.6.8",
        "@jimp/test-utils" : "^0.6.8"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.6.8",
      "gitHead" : "aa937725a7db4f33c68cbab36ab5cf942f4b90ff",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.6.8_1567525645151_0.5699106052106726"
      },
      "_nodeVersion" : "8.14.1"
    },
    "0.9.4-canary.845.627.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.9.4-canary.845.627.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.9.4-canary.845.627.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.9.4-canary.845.627.0.tgz",
        "shasum" : "0557f3387cfbf52d972a15e1948f108a7353bf35"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.9.4-canary.845.627.0",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.9.4-canary.845.627.0",
        "@jimp/test-utils" : "0.9.4-canary.845.627.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.9.4-canary.845.627.0",
      "gitHead" : "cad3ef731986df2705ef1b8526c3dfe9683eb030",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.9.4-canary.845.627.0_1581450623741_0.2893816909257898"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.6.6" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.6.6",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.6.6.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.6.6.tgz",
        "shasum" : "cfadbe916da0836939a4b571dd1d8237940cbeee"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.6.6",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.6.6",
        "@jimp/test-utils" : "^0.6.6"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.6.6",
      "gitHead" : "72f4171b9de0bc27cdd2a014c4da726151b8da0e",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.6.6_1567473479822_0.24542672261583642"
      },
      "_nodeVersion" : "8.14.1"
    },
    "0.6.7" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.6.7",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.6.7.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.6.7.tgz",
        "shasum" : "bc243758929ee426186834d308d77d66f371284f"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.6.7",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.6.7",
        "@jimp/test-utils" : "^0.6.7"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.6.7",
      "gitHead" : "88b63e68275c60fe0dce3056657b845bb169065c",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.6.7_1567473972319_0.6510421565849134"
      },
      "_nodeVersion" : "8.14.1"
    },
    "0.4.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.4.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.4.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.4.0.tgz",
        "shasum" : "fe636da06d35d0d95e5bcc47fcc3af3a9baa185a"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.4.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.4.0",
        "@jimp/test-utils" : "^0.4.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_from" : "file:jimp-plugin-crop-0.4.0.tgz",
      "_npmVersion" : "6.2.0",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.4.0",
      "gitHead" : "4daa956fce81c656ffa10d814a08412ef09b7e69",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.4.0_1535929527426_0.04410783876757218"
      },
      "_resolved" : "",
      "_integrity" : "",
      "_nodeVersion" : "10.8.0"
    },
    "0.8.2" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.2",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.2.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.2.tgz",
        "shasum" : "f87ca01fd0834940bac9b7d1714b27008f87a8d7"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.8.2",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.8.2",
        "@jimp/test-utils" : "^0.8.2"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.2",
      "gitHead" : "c4575b6fb9f25c8bad05f05541bf195da21791e6",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.2_1568396026198_0.10859298821035401"
      },
      "_nodeVersion" : "8.14.1"
    },
    "0.8.3" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.3",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.3.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.3.tgz",
        "shasum" : "e687423e750f1a60d613bfb75132b1a4482c8b73"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.8.3",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.8.3",
        "@jimp/test-utils" : "^0.8.3"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.3",
      "gitHead" : "42e184cf4681b71bc1594c8822be3553d152b5e2",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.3_1568849161872_0.7827977109194193"
      },
      "_nodeVersion" : "8.14.1"
    },
    "0.8.4-canary.798.377.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.4-canary.798.377.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.4-canary.798.377.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.4-canary.798.377.0.tgz",
        "shasum" : "1ec45d77a446809d19b36a0e935ca3739ddace08"
      },
      "dependencies" : {
        "@jimp/utils" : "0.8.4-canary.798.377.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.4-canary.798.377.0",
        "@jimp/test-utils" : "0.8.4-canary.798.377.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.4-canary.798.377.0",
      "gitHead" : "44c5ed24135627bcd9ddf9fa47d3c78e4a37457e",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.4-canary.798.377.0_1568869712845_0.13787668705483047"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.8.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.0.tgz",
        "shasum" : "0bfcdf550dec0e10652531b7e5e975c9410c289a"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.8.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.8.0",
        "@jimp/test-utils" : "^0.8.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.0",
      "gitHead" : "11f2dcb229e4adeff449fbc0c8dee89586a576d3",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.0_1567876802509_0.9412462689118961"
      },
      "_nodeVersion" : "8.14.1"
    },
    "0.8.1-canary.786.217.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.1-canary.786.217.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.1-canary.786.217.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.1-canary.786.217.0.tgz",
        "shasum" : "a7c99768872a007706f592ca787cb3122c6325ef"
      },
      "dependencies" : {
        "@jimp/utils" : "0.8.1-canary.786.217.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.1-canary.786.217.0",
        "@jimp/test-utils" : "0.8.1-canary.786.217.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.1-canary.786.217.0",
      "gitHead" : "f9d0b4a1a3de789557a2fedd477fbdd2a81f12c5",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.1-canary.786.217.0_1568085589181_0.3868162754955409"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.8.1" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.1",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.1.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.1.tgz",
        "shasum" : "24a408373266cf9450d7c58326330d6a925a427e"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.8.1",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.8.1",
        "@jimp/test-utils" : "^0.8.1"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.1",
      "gitHead" : "4242e41056cdbab8080c45c22e47716864a29503",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.1_1568264964759_0.896687651964277"
      },
      "_nodeVersion" : "8.14.1"
    },
    "0.15.1-canary.924.1021.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.15.1-canary.924.1021.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.15.1-canary.924.1021.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.15.1-canary.924.1021.0.tgz",
        "shasum" : "77f4750d638b30c945b9a143bfdc0f3e6d5757bf"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.15.1-canary.924.1021.0"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.15.1-canary.924.1021.0",
        "@jimp/test-utils" : "0.15.1-canary.924.1021.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.22.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.15.1-canary.924.1021.0",
      "gitHead" : "4d135221b81927042a1c8d7ae62b58cc886d39c3",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.15.1-canary.924.1021.0_1596841071213_0.05963484478335057"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "10.22.0"
    },
    "0.8.2-canary.792.353.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.2-canary.792.353.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.2-canary.792.353.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.2-canary.792.353.0.tgz",
        "shasum" : "b9c9bb6030be2c9cfaa592c90a62a854bd66abd3"
      },
      "dependencies" : {
        "@jimp/utils" : "0.8.2-canary.792.353.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.2-canary.792.353.0",
        "@jimp/test-utils" : "0.8.2-canary.792.353.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.2-canary.792.353.0",
      "gitHead" : "f5db61068f71f7ceef563bbd08ab0d8f78f82454",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.2-canary.792.353.0_1568761944512_0.7641804108393357"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.8.1-canary.786.232.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.1-canary.786.232.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.1-canary.786.232.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.1-canary.786.232.0.tgz",
        "shasum" : "b9ee92cb85e79077fee598ed7afbaedcdca0c06d"
      },
      "dependencies" : {
        "@jimp/utils" : "0.8.1-canary.786.232.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.1-canary.786.232.0",
        "@jimp/test-utils" : "0.8.1-canary.786.232.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.1-canary.786.232.0",
      "gitHead" : "90bc07eac498e014b3902ebaeb341f874e8f1f19",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.1-canary.786.232.0_1568135007534_0.19804682283650243"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.16.2-canary.919.1052.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.16.2-canary.919.1052.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.16.2-canary.919.1052.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.16.2-canary.919.1052.0.tgz",
        "shasum" : "08069918c6ce54eae35de124a800ec73401c0836"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.16.2-canary.919.1052.0"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.16.2-canary.919.1052.0",
        "@jimp/test-utils" : "0.16.2-canary.919.1052.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.22.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.16.2-canary.919.1052.0",
      "gitHead" : "385872c90816a6a5bb1dfec7ec88651e4b523d92",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.16.2-canary.919.1052.0_1598635389687_0.66459928132544"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "10.22.0"
    },
    "0.10.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.10.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.10.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.10.0.tgz",
        "shasum" : "70e1c64c23b311ecae23584d6ca3b9e85f7856d0"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "^0.10.0",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.10.0",
        "@jimp/test-utils" : "^0.10.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.19.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.10.0",
      "gitHead" : "c23237b41f76be00987a37484cf17dce3a243e2e",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.10.0_1585535833621_0.5364226201740172"
      },
      "_nodeVersion" : "10.19.0"
    },
    "0.9.3-canary.825.599.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.9.3-canary.825.599.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.9.3-canary.825.599.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.9.3-canary.825.599.0.tgz",
        "shasum" : "33ead0b0023d739e34273c82f700cd3f820c3182"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.9.3-canary.825.599.0",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.9.3-canary.825.599.0",
        "@jimp/test-utils" : "0.9.3-canary.825.599.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.9.3-canary.825.599.0",
      "gitHead" : "a7ca135eac68c9ed228a1cd5fe535bf9cfc0a143",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.9.3-canary.825.599.0_1574810448293_0.7944720449692937"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.3.9-alpha.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.3.9-alpha.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.3.9-alpha.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.3.9-alpha.0.tgz",
        "shasum" : "a180a860cf4295bc11873aab33a0efb19a010a68"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.3.9-alpha.0",
        "core-js" : "^2.5.7"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "5.6.0",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.3.9-alpha.0",
      "gitHead" : "2c747d1244260e551a9476b960b64fd7a9c06cc4",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.3.9-alpha.0_1535415509142_0.612227071549776"
      },
      "_nodeVersion" : "9.10.0"
    },
    "0.14.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.14.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.14.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.14.0.tgz",
        "shasum" : "4cbd856ca84ffc37230fad2534906f2f75aa3057"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "^0.14.0"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.14.0",
        "@jimp/test-utils" : "^0.14.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.21.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.14.0",
      "gitHead" : "777081348caf314a5f35d871702168c86ab2ca3b",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.14.0_1593454032462_0.09459432040532945"
      },
      "_nodeVersion" : "10.21.0"
    },
    "0.10.3" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.10.3",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.10.3.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.10.3.tgz",
        "shasum" : "03785181f62ddae9558ae73206f8d6217d7fa703"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "^0.10.3",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.10.3",
        "@jimp/test-utils" : "^0.10.3"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.20.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.10.3",
      "gitHead" : "37197106eae5c26231018dfdc0254422f6b43927",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.10.3_1587412861207_0.1914497960197692"
      },
      "_nodeVersion" : "10.20.1"
    },
    "0.10.2" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.10.2",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.10.2.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.10.2.tgz",
        "shasum" : "8523db60badbd4b7b378c2cb44e337ad42b22622"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "^0.10.2",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.10.2",
        "@jimp/test-utils" : "^0.10.2"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.20.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.10.2",
      "gitHead" : "dd7a6ba5d374d273d8ef69a1832725f6c768f817",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.10.2_1586879197759_0.6605296434965302"
      },
      "_nodeVersion" : "10.20.0"
    },
    "0.10.1" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.10.1",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.10.1.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.10.1.tgz",
        "shasum" : "40f20d8adcf83a7dd49ce40468afe82df72e16c4"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "^0.10.1",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.10.1",
        "@jimp/test-utils" : "^0.10.1"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.19.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.10.1",
      "gitHead" : "44ce60b5cc53ee60cd5c63d4dc0ecf26fd3d431e",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.10.1_1586110478646_0.8677498206164269"
      },
      "_nodeVersion" : "10.19.0"
    },
    "0.6.5-canary.eeb6481.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.6.5-canary.eeb6481.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.6.5-canary.eeb6481.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.6.5-canary.eeb6481.0.tgz",
        "shasum" : "efb2d7f472c5f891bf062683951b2c4c26ea858b"
      },
      "dependencies" : {
        "@jimp/utils" : "0.6.5-canary.eeb6481.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.6.5-canary.eeb6481.0",
        "@jimp/test-utils" : "0.6.5-canary.eeb6481.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v10.15.0+x64 (darwin)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.6.5-canary.eeb6481.0",
      "gitHead" : "eeb6481c32c72c7082efa5fa9079653c513d1b27",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.6.5-canary.eeb6481.0_1567469810766_0.11212382412349253"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "10.15.0"
    },
    "0.8.2-canary.792.360.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.2-canary.792.360.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.2-canary.792.360.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.2-canary.792.360.0.tgz",
        "shasum" : "af9e1f033c462d6101d38a24f6ec7155f971ccd1"
      },
      "dependencies" : {
        "@jimp/utils" : "0.8.2-canary.792.360.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.2-canary.792.360.0",
        "@jimp/test-utils" : "0.8.2-canary.792.360.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.2-canary.792.360.0",
      "gitHead" : "29f7a9f2419b2780dd6eeb350f6a1f500b00e1ae",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.2-canary.792.360.0_1568840829455_0.5155004146738051"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.8.1-canary.786.262.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.1-canary.786.262.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.1-canary.786.262.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.1-canary.786.262.0.tgz",
        "shasum" : "52c6ad85f27643d4326ba2ecc670cbb494ddee46"
      },
      "dependencies" : {
        "@jimp/utils" : "0.8.1-canary.786.262.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.1-canary.786.262.0",
        "@jimp/test-utils" : "0.8.1-canary.786.262.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.1-canary.786.262.0",
      "gitHead" : "b0d5448f47e49a8ee4992dc53166a8ee32c8ee19",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.1-canary.786.262.0_1568176425499_0.7175176686493989"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.9.3-canary.825.584.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.9.3-canary.825.584.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.9.3-canary.825.584.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.9.3-canary.825.584.0.tgz",
        "shasum" : "06edb9452c2c58c53994cf6c73dda0c69a30c17a"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.9.3-canary.825.584.0",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.9.3-canary.825.584.0",
        "@jimp/test-utils" : "0.9.3-canary.825.584.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.9.3-canary.825.584.0",
      "gitHead" : "b52405f03464a37390ce846c22e34755347c48d2",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.9.3-canary.825.584.0_1574809706054_0.07715230850221522"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.16.2-canary.938.1059.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.16.2-canary.938.1059.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.16.2-canary.938.1059.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.16.2-canary.938.1059.0.tgz",
        "shasum" : "dd6918ae2989bbbfd1fee890f33a34564a998024"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.16.2-canary.938.1059.0"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.16.2-canary.938.1059.0",
        "@jimp/test-utils" : "0.16.2-canary.938.1059.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.22.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.16.2-canary.938.1059.0",
      "gitHead" : "eac009a0e11a8dcc573ebbcb1793e49b8041a977",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.16.2-canary.938.1059.0_1599483481056_0.018274653971161348"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "10.22.0"
    },
    "0.8.2-canary.792.349.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.2-canary.792.349.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.2-canary.792.349.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.2-canary.792.349.0.tgz",
        "shasum" : "85b9d5d2db775a3f61cf6feef14ba54d82ed256c"
      },
      "dependencies" : {
        "@jimp/utils" : "0.8.2-canary.792.349.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.2-canary.792.349.0",
        "@jimp/test-utils" : "0.8.2-canary.792.349.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.2-canary.792.349.0",
      "gitHead" : "c59bd6acbcca0653ca442e8be2e8aba892a7a0ca",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.2-canary.792.349.0_1568761775817_0.26013141391487093"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.9.5" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.9.5",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.9.5.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.9.5.tgz",
        "shasum" : "e0b7d6359d2cad2be1ada2c57aaccca51dc41784"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "^0.9.5",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.9.5",
        "@jimp/test-utils" : "^0.9.5"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.9.5",
      "gitHead" : "ecadad6b337ee78e23d683e9560a4182e43d9820",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.9.5_1583276356525_0.6518006440690767"
      },
      "_nodeVersion" : "8.14.1"
    },
    "0.9.6" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.9.6",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.9.6.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.9.6.tgz",
        "shasum" : "82e539af2a2417783abbd143124a57672ff4cc31"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "^0.9.6",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.9.6",
        "@jimp/test-utils" : "^0.9.6"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.19.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.9.6",
      "gitHead" : "231e9e39e315aa0821d259553877e54d57e9dd6f",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.9.6_1584554983806_0.42453612968318954"
      },
      "_nodeVersion" : "10.19.0"
    },
    "0.9.3" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.9.3",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.9.3.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.9.3.tgz",
        "shasum" : "9b19c11293714a99c03d4b517ab597a5f88823e8"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "^0.9.3",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.9.3",
        "@jimp/test-utils" : "^0.9.3"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.9.3",
      "gitHead" : "bcba912d188def2e9e5d2ee75109d8dfbc9fab24",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.9.3_1574810324520_0.986042618544438"
      },
      "_nodeVersion" : "8.14.1"
    },
    "0.9.4" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.9.4",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.9.4.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.9.4.tgz",
        "shasum" : "5c955c326053a325e930bd65ef12e0eca1bece7b"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "^0.9.4",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.9.4",
        "@jimp/test-utils" : "^0.9.4"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.9.4",
      "gitHead" : "a1120faa4dbe2a3ab3a465b93e5db254ec2876f2",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.9.4_1583275245672_0.6161515778451703"
      },
      "_nodeVersion" : "8.14.1"
    },
    "0.8.2-canary.792.290.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.2-canary.792.290.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.2-canary.792.290.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.2-canary.792.290.0.tgz",
        "shasum" : "0497f5da613763bfad7807452712e430f3c530f8"
      },
      "dependencies" : {
        "@jimp/utils" : "0.8.2-canary.792.290.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.2-canary.792.290.0",
        "@jimp/test-utils" : "0.8.2-canary.792.290.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.2-canary.792.290.0",
      "gitHead" : "9cdd4f81472c738ea7c29a55f5650cfc8bdae919",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.2-canary.792.290.0_1568309092095_0.12190289234311824"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.9.7-canary.854.725.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.9.7-canary.854.725.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.9.7-canary.854.725.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.9.7-canary.854.725.0.tgz",
        "shasum" : "b50d9fc68e668b4f5451bbdc8a07dbd1ffd28c5c"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.9.7-canary.854.725.0",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.9.7-canary.854.725.0",
        "@jimp/test-utils" : "0.9.7-canary.854.725.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.19.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.9.7-canary.854.725.0",
      "gitHead" : "f94b1383a55f945130aebfa1bdecf8c2501306d5",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.9.7-canary.854.725.0_1584555607931_0.5278987470320924"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "10.19.0"
    },
    "0.9.7" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.9.7",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.9.7.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.9.7.tgz",
        "shasum" : "55d68658a277bd9e2b01e9885ef73a928efdc589"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "^0.9.7",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.9.7",
        "@jimp/test-utils" : "^0.9.7"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.19.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.9.7",
      "gitHead" : "c56d6f758a2404b3c4ef6682c7419cc42a0887c0",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.9.7_1585330883726_0.687805185688837"
      },
      "_nodeVersion" : "10.19.0"
    },
    "0.9.8" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.9.8",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.9.8.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.9.8.tgz",
        "shasum" : "2308696597a8bcb528d09eeebbbadb22248e7c1c"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "^0.9.8",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.9.8",
        "@jimp/test-utils" : "^0.9.8"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.19.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.9.8",
      "gitHead" : "3a3df33f1fcf11899075ba87811d7c3d4f9bed21",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.9.8_1585354429586_0.93298539637179"
      },
      "_nodeVersion" : "10.19.0"
    },
    "0.7.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.7.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.7.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.7.0.tgz",
        "shasum" : "c960734da643b9ab920e97dd9c2ad35baf0ec61f"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.7.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.7.0",
        "@jimp/test-utils" : "^0.7.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.7.0",
      "gitHead" : "cd5ff6a525c0e547fb0b8172a864d98c4ed7d5fd",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.7.0_1567785192345_0.7212544507763496"
      },
      "_nodeVersion" : "8.14.1"
    },
    "0.3.7" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.3.7",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.3.7.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.3.7.tgz",
        "shasum" : "7a78615b89957ca4913fe83de55d442cf635b6ca"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.3.7"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.3.7",
      "licenseText" : "The MIT License (MIT)\n\nCopyright (c) 2014 Oliver Moran\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.3.7_1535262179380_0.2467549630273156"
      }
    },
    "0.3.8" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.3.8",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.3.8.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.3.8.tgz",
        "shasum" : "5bfab260595c8000c002b8a7d706f59d689bad09"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.3.8"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.3.8",
      "gitHead" : "e04f0bb3d755b18136b00ccefc02497b7581a828",
      "licenseText" : "The MIT License (MIT)\n\nCopyright (c) 2014 Oliver Moran\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.3.8_1535392902759_0.6584576243276676"
      }
    },
    "0.3.6" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.3.6",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.3.6.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.3.6.tgz",
        "shasum" : "87fcbe9520c5652832fb48e5d1093aadd68efdf7"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.3.6"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.3.6",
      "gitHead" : "783a66aa27c7b29c4544aaf9a829d2b000ab1f7c",
      "licenseText" : "The MIT License (MIT)\n\nCopyright (c) 2014 Oliver Moran\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.3.6_1535261934039_0.9595369521517507"
      }
    },
    "0.9.6-canary.860.700.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.9.6-canary.860.700.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.9.6-canary.860.700.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.9.6-canary.860.700.0.tgz",
        "shasum" : "bb2e74ea7a883f4741b0bae832ba7952430349b5"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.9.6-canary.860.700.0",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.9.6-canary.860.700.0",
        "@jimp/test-utils" : "0.9.6-canary.860.700.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.19.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.9.6-canary.860.700.0",
      "gitHead" : "b1ed4600f773ec54230e878c02c21730211f8d2a",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.9.6-canary.860.700.0_1584554707593_0.9550289861482013"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "10.19.0"
    },
    "0.8.1-canary.791.466.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.1-canary.791.466.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.1-canary.791.466.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.1-canary.791.466.0.tgz",
        "shasum" : "8b20ae050e5be914fad4b3f89d71f3030dcc2be4"
      },
      "dependencies" : {
        "@jimp/utils" : "0.8.1-canary.791.466.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.1-canary.791.466.0",
        "@jimp/test-utils" : "0.8.1-canary.791.466.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.1-canary.791.466.0",
      "gitHead" : "7954b0296d1da7ae878ce21b114d831575e2dfac",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.1-canary.791.466.0_1570439678064_0.2897577316533708"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.8.5-canary.799.447.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.5-canary.799.447.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.5-canary.799.447.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.5-canary.799.447.0.tgz",
        "shasum" : "418baddbe0075e1fb8832246d6633b8c04e741cc"
      },
      "dependencies" : {
        "@jimp/utils" : "0.8.5-canary.799.447.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.5-canary.799.447.0",
        "@jimp/test-utils" : "0.8.5-canary.799.447.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.5-canary.799.447.0",
      "gitHead" : "15e06a23a3c1472e0610162322d67763962d8ffd",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.5-canary.799.447.0_1569359392788_0.22393808724120423"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.8.2-canary.792.283.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.2-canary.792.283.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.2-canary.792.283.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.2-canary.792.283.0.tgz",
        "shasum" : "98e373716dc75517c52582e95a06a325a5213cd9"
      },
      "dependencies" : {
        "@jimp/utils" : "0.8.2-canary.792.283.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.2-canary.792.283.0",
        "@jimp/test-utils" : "0.8.2-canary.792.283.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.2-canary.792.283.0",
      "gitHead" : "72d08007f8ea0c5fe4de64e357948b758e598699",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.2-canary.792.283.0_1568301685853_0.5589678831127534"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.14.0-canary.904.976.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.14.0-canary.904.976.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.14.0-canary.904.976.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.14.0-canary.904.976.0.tgz",
        "shasum" : "cbd321b2900c451fde40efc511566c91dbaa20b2"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.14.0-canary.904.976.0"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.14.0-canary.904.976.0",
        "@jimp/test-utils" : "0.14.0-canary.904.976.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.21.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.14.0-canary.904.976.0",
      "gitHead" : "500856b2be239da7e2d0aee2d9ba9c198ff57a5c",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.14.0-canary.904.976.0_1593447690041_0.7920058355307509"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "10.21.0"
    },
    "0.13.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.13.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.13.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.13.0.tgz",
        "shasum" : "2215923db11694796a40a294faf373454a0af3f8"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "^0.13.0"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.13.0",
        "@jimp/test-utils" : "^0.13.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.21.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.13.0",
      "gitHead" : "a29b6686e3084e6d57dc643c351979a83af9352c",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.13.0_1591337035319_0.03872634214356374"
      },
      "_nodeVersion" : "10.21.0"
    },
    "0.8.6-canary.818.495.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.6-canary.818.495.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.6-canary.818.495.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.6-canary.818.495.0.tgz",
        "shasum" : "25cbccbb92329ee9baa131f02050e5ed5626653c"
      },
      "dependencies" : {
        "@jimp/utils" : "0.8.6-canary.818.495.0",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.6-canary.818.495.0",
        "@jimp/test-utils" : "0.8.6-canary.818.495.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.6-canary.818.495.0",
      "gitHead" : "3b326196faede3b9d88e1e9a37305cbcba7151d8",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.6-canary.818.495.0_1574198401348_0.06186044836576943"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.8.1-canary.786.223.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.1-canary.786.223.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.1-canary.786.223.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.1-canary.786.223.0.tgz",
        "shasum" : "e9df5881c6aa9bdb33e79cd2b2068ea27f63c34d"
      },
      "dependencies" : {
        "@jimp/utils" : "0.8.1-canary.786.223.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.1-canary.786.223.0",
        "@jimp/test-utils" : "0.8.1-canary.786.223.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.1-canary.786.223.0",
      "gitHead" : "62486b053cb9cc408422e1b131813927d87edbbe",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.1-canary.786.223.0_1568100868127_0.8137200435709657"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.8.1-canary.786.242.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.1-canary.786.242.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.1-canary.786.242.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.1-canary.786.242.0.tgz",
        "shasum" : "79bdaae0094c124c5369622bb610a86132491a59"
      },
      "dependencies" : {
        "@jimp/utils" : "0.8.1-canary.786.242.0",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.8.1-canary.786.242.0",
        "@jimp/test-utils" : "0.8.1-canary.786.242.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.1-canary.786.242.0",
      "gitHead" : "688195a6958d089e764c1cb3a874b7f7e18fa5e3",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.1-canary.786.242.0_1568161303600_0.6813440185563422"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.14.1"
    },
    "0.9.8-canary.866.767.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.9.8-canary.866.767.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.9.8-canary.866.767.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.9.8-canary.866.767.0.tgz",
        "shasum" : "a3503362971743fe2fd0dcc697a73a8cd163b87c"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.9.8-canary.866.767.0",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.9.8-canary.866.767.0",
        "@jimp/test-utils" : "0.9.8-canary.866.767.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.19.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.9.8-canary.866.767.0",
      "gitHead" : "b327d64410808e2be428568d217439b8e17e1d08",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.9.8-canary.866.767.0_1585349036454_0.4508512577716355"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "10.19.0"
    },
    "0.8.4" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.4",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.4.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.4.tgz",
        "shasum" : "ca5bd359c4e4b2374777bae6130e8b94552932fa"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.8.4",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.8.4",
        "@jimp/test-utils" : "^0.8.4"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.13.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.4",
      "gitHead" : "ee5a809cae7cb7cc8c017e2eca935e17fd6bb5d4",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.4_1568996649828_0.5428271576465082"
      },
      "_nodeVersion" : "8.14.1"
    },
    "0.12.2-canary.899.952.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.12.2-canary.899.952.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.12.2-canary.899.952.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.12.2-canary.899.952.0.tgz",
        "shasum" : "95048732c3e9743b44ad7bc6ec1130aa3d18ffdd"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.12.2-canary.899.952.0"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.12.2-canary.899.952.0",
        "@jimp/test-utils" : "0.12.2-canary.899.952.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.21.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.12.2-canary.899.952.0",
      "gitHead" : "71319029e254af5900a70fe584994f086cba6766",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.12.2-canary.899.952.0_1591334119785_0.23750146025652374"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "10.21.0"
    },
    "0.8.5" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.8.5",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.8.5.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.8.5.tgz",
        "shasum" : "68e2a72796148d32b18fd74d5f0d2dc049b5af84"
      },
      "dependencies" : {
        "@jimp/utils" : "^0.8.5",
        "core-js" : "^2.5.7"
      },
      "devDependencies" : {
        "@jimp/custom" : "^0.8.5",
        "@jimp/test-utils" : "^0.8.5"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v8.14.1+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.8.5",
      "gitHead" : "60b635dd77b6ea900043d81d09a12ff82fd14fd0",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.8.5_1571431932439_0.5184846820924138"
      },
      "_nodeVersion" : "8.14.1"
    },
    "0.10.1-canary.870.821.0" : {
      "name" : "@jimp/plugin-crop",
      "description" : "crop an image.",
      "version" : "0.10.1-canary.870.821.0",
      "main" : "dist/index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/@jimp/plugin-crop/-/plugin-crop-0.10.1-canary.870.821.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2F%40jimp%2Fplugin-crop%2F-%2Fplugin-crop-0.10.1-canary.870.821.0.tgz",
        "shasum" : "402e42d28a6b0a2e30e608b782de1354c19999d2"
      },
      "dependencies" : {
        "@babel/runtime" : "^7.7.2",
        "@jimp/utils" : "0.10.1-canary.870.821.0",
        "core-js" : "^3.4.1"
      },
      "devDependencies" : {
        "@jimp/custom" : "0.10.1-canary.870.821.0",
        "@jimp/test-utils" : "0.10.1-canary.870.821.0"
      },
      "peerDependencies" : {
        "@jimp/custom" : ">=0.3.5"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "cross-env BABEL_ENV=test mocha --require @babel/register",
        "test:watch" : "npm run test -- --reporter min --watch",
        "test:coverage" : "nyc npm run test",
        "build" : "npm run build:node:production && npm run build:module",
        "build:watch" : "npm run build:node:debug -- -- --watch --verbose",
        "build:debug" : "npm run build:node:debug",
        "build:module" : "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
        "build:node" : "babel src -d dist --source-maps --config-file ../../babel.config.js",
        "build:node:debug" : "cross-env BABEL_ENV=development npm run build:node",
        "build:node:production" : "cross-env BABEL_ENV=production npm run build:node"
      },
      "publishConfig" : {
        "access" : "public"
      },
      "_npmVersion" : "lerna/3.16.4/node@v10.19.0+x64 (linux)",
      "_npmUser" : {
        "name" : "alisowski",
        "email" : "lisowski54@gmail.com"
      },
      "_id" : "@jimp/plugin-crop@0.10.1-canary.870.821.0",
      "gitHead" : "f36f13dbe9b849efa0202e5019a991cd5d730298",
      "types" : "index.d.ts",
      "module" : "es/index.js",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/plugin-crop_0.10.1-canary.870.821.0_1586083975658_0.869719648551001"
      },
      "readme" : "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-crop</h1>\n  <p>Crop an image.</p>\n</div>\n\n## Crop\n\nCrops the image at a given point to a give size\n\n- @param {number} x the x coordinate to crop form\n- @param {number} y the y coordinate to crop form\n- @param w the width of the crop region\n- @param h the height of the crop region\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.crop(150, 150);\n}\n\nmain();\n```\n\n## AutoCrop\n\nAutoCrop same color borders from this image\n\n- @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n- @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n\nor\n\n- @param {object} options object\n  - tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n  - cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n  - cropSymmetric (optional): flag to force cropping top be symmetric. north and south / east and west are cropped by the same value\n  - leaveBorder (optional): integer of how many pixels of the background color to leave around the image\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.autocrop();\n  image.autocrop({ cropOnlyFrames: false, cropSymmetric: true });\n}\n\nmain();\n```\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "10.19.0"
    }
  },
  "readme" : "",
  "time" : {
    "0.6.0" : "2018-11-28T19:23:52.795Z",
    "0.6.1" : "2019-03-28T19:57:58.104Z",
    "0.6.4" : "2019-04-27T20:42:11.310Z",
    "0.6.5" : "2019-09-03T01:09:35.226Z",
    "0.6.2" : "2019-04-27T18:00:40.046Z",
    "0.8.1-canary.786.211.0" : "2019-09-10T02:13:36.006Z",
    "0.8.2-canary.792.332.0" : "2019-09-17T18:35:13.510Z",
    "0.10.2-canary.875.842.0" : "2020-04-14T13:24:55.725Z",
    "0.9.6-canary.857.681.0" : "2020-03-18T17:32:52.986Z",
    "0.10.5-canary.882.886.0" : "2020-05-02T03:38:36.927Z",
    "0.8.5-canary.b147e81.0" : "2019-09-24T20:48:38.020Z",
    "0.8.1-canary.789.460.0" : "2019-09-26T09:27:57.770Z",
    "0.9.6-canary.858.667.0" : "2020-03-18T16:36:49.463Z",
    "0.12.1-canary.892.924.0" : "2020-05-19T06:19:57.329Z",
    "0.10.4-canary.882.884.0" : "2020-05-02T03:36:30.929Z",
    "0.16.1" : "2020-08-28T17:20:56.608Z",
    "0.16.0" : "2020-08-08T00:27:25.906Z",
    "0.8.5-canary.753c2c9.0" : "2019-09-24T20:45:17.177Z",
    "0.12.1" : "2020-05-19T06:30:31.343Z",
    "0.12.0" : "2020-05-17T00:34:22.085Z",
    "0.8.1-canary.789.301.0" : "2019-09-13T07:39:21.199Z",
    "0.9.4-canary.838.613.0" : "2020-01-09T15:32:21.595Z",
    "0.8.2-canary.794.308.0" : "2019-09-13T17:06:33.223Z",
    "0.9.9-canary.867.792.0" : "2020-03-29T22:46:15.209Z",
    "0.8.1-canary.791.276.0" : "2019-09-12T09:57:00.123Z",
    "0.8.5-canary.1.b147e81.0" : "2019-09-24T20:58:34.074Z",
    "0.9.4-canary.832.606.0" : "2019-12-28T00:26:21.657Z",
    "0.16.2-canary.934.1053.0" : "2020-08-28T17:24:14.542Z",
    "0.6.5-canary.784.124.0" : "2019-09-03T00:51:23.643Z",
    "0.3.9" : "2018-08-28T00:28:04.017Z",
    "0.11.1-canary.891.908.0" : "2020-05-16T18:23:20.533Z",
    "0.5.1" : "2018-09-23T20:25:36.091Z",
    "0.5.2" : "2018-09-23T20:53:49.011Z",
    "0.5.0" : "2018-09-15T20:28:47.291Z",
    "0.9.1" : "2019-11-26T17:40:18.383Z",
    "0.5.3" : "2018-09-23T21:14:10.184Z",
    "0.5.4" : "2018-10-12T06:19:59.164Z",
    "0.9.0" : "2019-11-26T17:07:36.408Z",
    "0.6.7-canary.783.157.0" : "2019-09-03T01:28:29.917Z",
    "0.8.2-canary.792.339.0" : "2019-09-17T23:02:00.669Z",
    "0.9.9-canary.868.799.0" : "2020-03-30T01:16:25.365Z",
    "0.6.5-canary.784.118.0" : "2019-09-03T00:43:23.534Z",
    "0.6.8-canary.783.163.0" : "2019-09-03T04:58:39.479Z",
    "0.6.5-canary.4564f3c.0" : "2019-09-02T23:59:42.064Z",
    "0.14.1-canary.911.993.0" : "2020-07-16T18:32:46.267Z",
    "0.10.4-canary.882.885.0" : "2020-05-02T03:36:11.362Z",
    "0.9.4-canary.841.620.0" : "2020-01-25T23:28:19.320Z",
    "0.7.1-canary.770.193.0" : "2019-09-07T02:48:50.999Z",
    "0.8.6-canary.810.481.0" : "2019-10-30T17:15:47.491Z",
    "0.15.0" : "2020-08-07T20:25:07.261Z",
    "0.11.0" : "2020-05-15T21:21:23.234Z",
    "0.8.6-canary.815.502.0" : "2019-11-19T22:13:50.193Z",
    "0.8.5-canary.800.426.0" : "2019-09-21T00:53:32.269Z",
    "0.3.6-alpha.6" : "2018-08-26T04:39:04.228Z",
    "0.9.2-canary.815.538.0" : "2019-11-26T20:13:43.052Z",
    "0.14.1-canary.919.1005.0" : "2020-07-30T11:51:33.841Z",
    "0.3.6-alpha.5" : "2018-08-26T04:22:41.961Z",
    "0.13.0-canary.899.964.0" : "2020-06-05T06:04:19.198Z",
    "0.8.6-canary.815.488.0" : "2019-11-16T21:25:57.163Z",
    "0.6.8" : "2019-09-03T15:47:25.290Z",
    "0.9.4-canary.845.627.0" : "2020-02-11T19:50:23.872Z",
    "0.6.6" : "2019-09-03T01:17:59.910Z",
    "0.6.7" : "2019-09-03T01:26:12.498Z",
    "0.4.0" : "2018-09-02T23:05:27.548Z",
    "0.8.2" : "2019-09-13T17:33:46.338Z",
    "0.8.3" : "2019-09-18T23:26:02.025Z",
    "0.8.4-canary.798.377.0" : "2019-09-19T05:08:33.063Z",
    "0.8.0" : "2019-09-07T17:20:02.638Z",
    "0.8.1-canary.786.217.0" : "2019-09-10T03:19:49.400Z",
    "0.8.1" : "2019-09-12T05:09:24.944Z",
    "0.15.1-canary.924.1021.0" : "2020-08-07T22:57:51.432Z",
    "0.8.2-canary.792.353.0" : "2019-09-17T23:12:24.632Z",
    "0.8.1-canary.786.232.0" : "2019-09-10T17:03:27.735Z",
    "0.16.2-canary.919.1052.0" : "2020-08-28T17:23:09.837Z",
    "0.10.0" : "2020-03-30T02:37:20.845Z",
    "modified" : "2020-09-07T12:58:16.399Z",
    "0.9.3-canary.825.599.0" : "2019-11-26T23:20:55.771Z",
    "0.3.9-alpha.0" : "2018-08-28T00:18:29.240Z",
    "0.14.0" : "2020-06-29T18:07:12.604Z",
    "0.10.3" : "2020-04-20T20:01:01.405Z",
    "created" : "2018-08-26T04:22:41.816Z",
    "0.10.2" : "2020-04-14T15:46:37.901Z",
    "0.10.1" : "2020-04-05T18:14:38.833Z",
    "0.6.5-canary.eeb6481.0" : "2019-09-03T00:16:50.907Z",
    "0.8.2-canary.792.360.0" : "2019-09-18T21:07:09.629Z",
    "0.8.1-canary.786.262.0" : "2019-09-11T04:33:45.671Z",
    "0.9.3-canary.825.584.0" : "2019-11-26T23:08:26.161Z",
    "0.16.2-canary.938.1059.0" : "2020-09-07T12:58:01.320Z",
    "0.8.2-canary.792.349.0" : "2019-09-17T23:09:35.957Z",
    "0.9.5" : "2020-03-03T22:59:16.675Z",
    "0.9.6" : "2020-03-18T18:09:43.915Z",
    "0.9.3" : "2019-11-26T23:18:44.711Z",
    "0.9.4" : "2020-03-03T22:40:45.978Z",
    "0.8.2-canary.792.290.0" : "2019-09-12T17:24:52.287Z",
    "0.9.7-canary.854.725.0" : "2020-03-18T18:20:08.024Z",
    "0.9.7" : "2020-03-27T17:41:23.886Z",
    "0.9.8" : "2020-03-28T00:13:49.823Z",
    "0.7.0" : "2019-09-06T15:53:19.475Z",
    "0.3.7" : "2018-08-26T05:42:59.476Z",
    "0.3.8" : "2018-08-27T18:01:43.040Z",
    "0.3.6" : "2018-08-26T05:38:54.090Z",
    "0.9.6-canary.860.700.0" : "2020-03-18T18:05:15.101Z",
    "0.8.1-canary.791.466.0" : "2019-10-07T09:14:38.204Z",
    "0.8.5-canary.799.447.0" : "2019-09-24T21:09:52.943Z",
    "0.8.2-canary.792.283.0" : "2019-09-12T15:21:33.493Z",
    "0.14.0-canary.904.976.0" : "2020-06-29T16:21:30.172Z",
    "0.13.0" : "2020-06-05T06:03:55.413Z",
    "0.8.6-canary.818.495.0" : "2019-11-19T21:20:01.509Z",
    "0.8.1-canary.786.223.0" : "2019-09-10T07:34:28.307Z",
    "0.8.1-canary.786.242.0" : "2019-09-11T00:21:43.769Z",
    "0.9.8-canary.866.767.0" : "2020-03-27T22:43:56.656Z",
    "0.8.4" : "2019-09-20T16:24:10.002Z",
    "0.12.2-canary.899.952.0" : "2020-06-05T05:15:19.895Z",
    "0.8.5" : "2019-10-18T20:52:12.616Z",
    "0.10.1-canary.870.821.0" : "2020-04-05T10:52:55.906Z"
  },
  "users" : {
  },
  "readmeFilename" : "",
  "license" : "MIT"
}